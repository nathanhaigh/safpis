[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "safpis"
description = """
    SAFPIS is a Python library to access the South Australia Fuel Pricing
    Information Scheme (SAFPIS) REST API.
"""
license = {text = "MIT License"}
requires-python = ">=3.5"
dynamic = ["dependencies", "version"]
authors = [
    {name = "Nathan Watson-Haigh", email = "nathan@watsonhaigh.net"},
]
readme = "README.rst"
keywords = ["safpis", "two"]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 3 - Alpha",

    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",

    "Natural Language :: English",

    "License :: OSI Approved :: MIT License",

    "Operating System :: OS Independent",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",

    "Topic :: Home Automation",
]

[tool]
[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
version = {attr = "safpis.__version__"}


[tool.black]
line-length = 79

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    python3.5,
    python3.6,
    python3.7,
    python3.8,
    python3.9,
    python3.10,
    python3.11,
    python3.12,
    flake8

[gh-actions]
python =
    3.7: python3.7
    3.8: python3.8
    3.9: python3.9
    3.10: python3.10
    3.11: python3.11
    3.12: python3.12

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 safpis tests

[testenv]
deps =
    -rrequirements.txt
setenv =
    PYTHONPATH = {toxinidir}
passenv =
    SAFPIS_SUBSCRIBER_TOKEN
commands =
    python -m unittest discover -s tests

[testenv:lint]
basepython = python3
commands =
  {envpython} -m pre_commit run --show-diff-on-failure {posargs:--all-files}

  # Print out the advice on how to install pre-commit from this env into Git:
  -{envpython} -c \
  'cmd = "{envpython} -m pre_commit install"; scr_width = len(cmd) + 10; sep = "=" * scr_width; cmd_str = "    $ " + cmd; '\
  'print("\n" + sep + "\nTo install pre-commit hooks into the Git repo, run:\n\n" + cmd_str + "\n\n" + sep + "\n")'
deps =
  pre-commit
  # pylint
isolated_build = true
skip_install = true

[testenv:build-docs]
allowlist_externals =
  git
basepython = python3
depends =
  make-changelog
deps =
  -r{toxinidir}/docs/requirements.txt
  # FIXME: re-enable the "-r" + "-c" paradigm once the pip bug is fixed.
  # Ref: https://github.com/pypa/pip/issues/9243
  # -r{toxinidir}/docs/requirements.in
  # -c{toxinidir}/docs/requirements.txt
description = Build The Docs
commands =
  # Retrieve possibly missing commits:
  -git fetch --unshallow
  -git fetch --tags

  # Build the html docs with Sphinx:
  {envpython} -m sphinx \
    -j auto \
    -b html \
    {tty:--color} \
    -a \
    -n \
    -W --keep-going \
    -d "{temp_dir}/.doctrees" \
    . \
    "{envdir}/docs_out"

  # Print out the output docs dir and a way to serve html:
  -{envpython} -c\
  'import pathlib;\
  docs_dir = pathlib.Path(r"{envdir}") / "docs_out";\
  index_file = docs_dir / "index.html";\
  print("\n" + "=" * 120 +\
  f"\n\nDocumentation available under:\n\n\
  \tfile://\{index_file\}\n\nTo serve docs, use\n\n\
  \t$ python3 -m http.server --directory \
  \N\{QUOTATION MARK\}\{docs_dir\}\N\{QUOTATION MARK\} 0\n\n" +\
  "=" * 120)'
changedir = {toxinidir}/docs
isolated_build = true
passenv =
  SSH_AUTH_SOCK
skip_install = true

[testenv:make-changelog]
basepython = python3
depends =
  check-changelog
description =
  Generate a changelog from fragments using Towncrier. Getting an
  unreleased changelog preview does not require extra arguments.
  When invoking to update the changelog, pass the desired version as an
  argument after `--`. For example, `tox -e {envname} -- 1.3.2`.
envdir = {toxworkdir}/changelog
commands =
  {envpython} -m \
    towncrier build \
    --version \
    {posargs:'[UNRELEASED DRAFT]' --draft}
deps =
  -r{toxinidir}/docs/requirements.txt
  # FIXME: re-enable the "-r" + "-c" paradigm once the pip bug is fixed.
  # Ref: https://github.com/pypa/pip/issues/9243
  # towncrier
  # -r{toxinidir}/docs/requirements.in
  # -c{toxinidir}/docs/requirements.txt
isolated_build = true
skip_install = true
"""

[tool.bumpversion]
current_version = "0.2.1"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "{new_version}"
allow_dirty = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<dev>post)\\d+\\.dev\\d+)?"
serialize = [
#    "{major}.{minor}.{patch}.{dev}{$PR_NUMBER}.dev{distance_to_latest_tag}",
    "{major}.{minor}.{patch}"
]
message = "Version updated from {current_version} to {new_version}"

[[tool.bumpversion.files]]
filename = "safpis/__init__.py"


[project.urls]
Documentation = "https://safpis.readthedocs.io"
Repository = "https://github.com/nathanhaigh/safpis.git"
Issues = "https://github.com/nathanhaigh/safpis/issues"
History = "https://github.com/nathanhaigh/safpis/blob/main/HISTORY.rst"

