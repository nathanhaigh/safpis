[build-system]
requires = [
  # Essentials
  "Cython >= 3.0.0b3; python_version >= '3.12'",  # needed by in-tree build backend `packaging/pep517_backend.py`
  "Cython; python_version < '3.12'",              # needed by in-tree build backend `packaging/pep517_backend.py`
  "setuptools >= 61.0",                           # needed by in-tree build backend `packaging/pep517_backend.py`
  "tomli; python_version < '3.11'",               # needed by in-tree build backend `packaging/pep517_backend.py`
  "expandvars",                                   # needed by in-tree build backend for env vars interpolation

  # Plugins
  "setuptools_scm[toml] >= 3.5",
  "setuptools_scm_git_archive >= 1.1",
]
backend-path = ["packaging"]  # requires 'Pip>=20' or 'pep517>=0.6.0'
build-backend = "pep517_backend.hooks"

[project]
name = "safpis"
description = """
    SAFPIS is a Python library to access the South Australia Fuel Pricing
    Information Scheme (SAFPIS) REST API.
"""
license = {text = "MIT License"}
requires-python = ">=3.5"
dynamic = ["dependencies", "version"]
authors = [
    {name = "Nathan Watson-Haigh", email = "nathan@watsonhaigh.net"},
]
readme = "README.rst"
keywords = ["safpis", "two"]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 3 - Alpha",

    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",

    "Natural Language :: English",

    "License :: OSI Approved :: MIT License",

    "Operating System :: OS Independent",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",

    "Topic :: Home Automation",
]

[tool]
[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
version = {attr = "safpis.__version__"}


[tool.black]
line-length = 79

[tool.bumpversion]
current_version = "0.2.1"
commit = true
commit_args = "--no-verify"
tag = true
tag_name = "{new_version}"
allow_dirty = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<dev>post)\\d+\\.dev\\d+)?"
serialize = [
#    "{major}.{minor}.{patch}.{dev}{$PR_NUMBER}.dev{distance_to_latest_tag}",
    "{major}.{minor}.{patch}"
]
message = "Version updated from {current_version} to {new_version}"

[[tool.bumpversion.files]]
filename = "safpis/__init__.py"

[tool.towncrier]
  # ATTENTION: Do not specify "package" setting because towncrier
  # ATTENTION: tries to import it and fails if it's not pre-compiled
  directory = "docs/changelog-fragments"
  filename = "docs/changelog.rst"
  issue_format = ":issue:`{issue}`"
  package_dir = "src"
  template = "docs/changelog-fragments/template.j2"
  title_format = "v{version} ({project_date})"
  underlines = ["=", "^", "-", "~"]

  # NOTE: The types are declared because:
  # NOTE: - there is no mechanism to override just the value of
  # NOTE:   `tool.towncrier.type.misc.showcontent`;
  # NOTE: - and, we want to declare extra non-default types for
  # NOTE:   clarity and flexibility.

  [[tool.towncrier.section]]
    path = ""

  [[tool.towncrier.type]]
    # Something we deemed an improper undesired behavior that got corrected
    # in the release to match pre-agreed expectations.
    directory = "bugfix"
    name = "Bug fixes"
    showcontent = true

  [[tool.towncrier.type]]
    # New behaviors, public APIs. That sort of stuff.
    directory = "feature"
    name = "Features"
    showcontent = true

  [[tool.towncrier.type]]
    # Declarations of future API removals and breaking changes in behavior.
    directory = "deprecation"
    name = "Deprecations (removal in next major release)"
    showcontent = true

  [[tool.towncrier.type]]
    # When something public gets removed in a breaking way. Could be
    # deprecated in an earlier release.
    directory = "breaking"
    name = "Removals and backward incompatible breaking changes"
    showcontent = true

  [[tool.towncrier.type]]
    # Notable updates to the documentation structure or build process.
    directory = "doc"
    name = "Improved documentation"
    showcontent = true

  [[tool.towncrier.type]]
    # Notes for downstreams about unobvious side effects and tooling. Changes
    # in the test invocation considerations and runtime assumptions.
    directory = "packaging"
    name = "Packaging updates and notes for downstreams"
    showcontent = true

  [[tool.towncrier.type]]
    # Stuff that affects the contributor experience. e.g. Running tests,
    # building the docs, setting up the development environment.
    directory = "contrib"
    name = "Contributor-facing changes"
    showcontent = true

  [[tool.towncrier.type]]
    # Changes that are hard to assign to any of the above categories.
    directory = "misc"
    name = "Miscellaneous internal changes"
    showcontent = true

[tool.setuptools_scm]
write_to = "src/pylibsshext/_scm_version.py"

[project.urls]
Documentation = "https://safpis.readthedocs.io"
Repository = "https://github.com/nathanhaigh/safpis.git"
Issues = "https://github.com/nathanhaigh/safpis/issues"
History = "https://github.com/nathanhaigh/safpis/blob/main/HISTORY.rst"

