[tox]
envlist =
    python3.5,
    python3.6,
    python3.7,
    python3.8,
    python3.9,
    python3.10,
    python3.11,
    python3.12,
    flake8
minversion = 3.21.0
requires =
  setuptools >= 40.9.0
  pip >= 19.0.3
  # tox-venv >= 0.4.0
isolated_build = true

[gh-actions]
python =
    3.7: python3.7
    3.8: python3.8
    3.9: python3.9
    3.10: python3.10
    3.11: python3.11
    3.12: python3.12

[testenv]
allowlist_externals =
  {env:CATCHSEGV_BINARY:}
  env
  sh
isolated_build = true
usedevelop = false
deps =
    -rrequirements.txt
passenv =
    SAFPIS_SUBSCRIBER_TOKEN
setenv =
  ANSIBLE_PYLIBSSH_TRACING = {env:ANSIBLE_PYLIBSSH_TRACING:1}
  CATCHSEGV_BINARY = {env:CATCHSEGV_BINARY:}
  COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
  COV_CORE_CONFIG = {toxinidir}/.coveragerc
  COV_CORE_DATAFILE = {toxinidir}/.coverage
  COV_CORE_SOURCE =
  PYTHONPATH = {toxinidir}
  SEGFAULT_SIGNALS = all
commands =
  {envpython} -m unittest discover -s tests

[testenv:lint]
basepython = python3
commands =
  {envpython} -m pre_commit run --show-diff-on-failure {posargs:--all-files}
  # Print out the advice on how to install pre-commit from this env into Git:
  -{envpython} -c \\
  'cmd = "{envpython} -m pre_commit install"; scr_width = len(cmd) + 10; sep = "=" * scr_width; cmd_str = "    $ " + cmd; '\\
  'print("\\n" + sep + "\\nTo install pre-commit hooks into the Git repo, run:\\n\\n" + cmd_str + "\\n\\n" + sep + "\\n")'
deps =
  pre-commit
  # pylint
isolated_build = true
skip_install = true

[testenv:flake8]
basepython = python
deps = flake8
commands = flake8 safpis tests

